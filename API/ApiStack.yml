Description: CF Stack for the Penny Discord Bot

Parameters:
  apiGatewayName:
    Type: String
    Default: penny-bot-api
  #apiGatewayHTTPMethod:
  #  Type: String
  #  Default: POST
  lambdaFunctionName:
    Type: String
    AllowedPattern: "[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+"
    Default: penny-api-lambda
  Filename:
    Type: String
    Description: Filename of the code function uploaded to S3


Resources:
  apiGateway: 
    Type: AWS::ApiGatewayV2::Api
    Properties: 
      Name: !Ref apiGatewayName
      Description: API Endpoints for the discord Penny bot
      ProtocolType: HTTP
      Target: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${lambdaFunctionName}/invocations

  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: penny-bot-discord
        S3Key: !Sub ${Filename}
      FunctionName: !Ref lambdaFunctionName
      Handler: handler 
      Role: !GetAtt lambdaIAMRole.Arn
      Runtime: provided.al2

  lambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref lambdaFunctionName
      Principal: apigateway.amazonaws.com
    DependsOn: lambdaFunction

  lambdaIAMRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow 
            Principal:
              Service: 
                - lambda.amazonaws.com
      Policies: 
        - PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Action: 
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - lambda:InvokeFunction
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchGetItem
                  - dynamodb:DeleteItem
                  - dynamodb:Attributes
                  - dynamodb:LeadingKeys
                  - dynamodb:ConditionCheckItem
                  - dynamodb:Scan
                Effect: Allow 
                Resource: 
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*
                  - !GetAtt dynamoUserTable.Arn
          PolicyName: lamda
  
  lambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${lambdaFunctionName}
      RetentionInDays: 30

  dynamoUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "penny-bot-table"
      AttributeDefinitions:
        -
          AttributeName: "pk"
          AttributeType: "S"
        - 
          AttributeName: "sk"
          AttributeType: "S"
        -
          AttributeName: "data1"
          AttributeType: "S"
        -
          AttributeName: "data2"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "pk"
          KeyType: "HASH"
        - 
          AttributeName: "sk"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        -
          IndexName: "GSI-1"
          KeySchema:
            -
              AttributeName: "data1"
              KeyType: "HASH"
            -
              AttributeName: "pk"
              KeyType: "RANGE"
          Projection:
            ProjectionType: KEYS_ONLY
        -
          IndexName: "GSI-2"
          KeySchema:
            - 
              AttributeName: "data2"
              KeyType: "HASH"
            -
              AttributeName: "pk"
              KeyType: "RANGE"
          Projection:
            ProjectionType: KEYS_ONLY
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

Outputs:
  lambdaArn:
    Value: !GetAtt lambdaFunction.Arn

  dynamoDBArn:
    Value: !GetAtt dynamoUserTable.Arn

  


